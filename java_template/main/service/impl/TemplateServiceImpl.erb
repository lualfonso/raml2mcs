/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package <%= package %>.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import <%= package %>.model.*;

import <%= package %>.repository.<%= @repository_name %>Repository;
import <%= package %>.service.<%= @service_name %>Service;
import  <%= package %>.converter.<%= @repository_name %>Converter;

/**
 *
 * @author Luis Alfonso
 */
@Service
public class <%= @service_name %>ServiceImpl implements <%= @service_name %>Service {
    @Autowired
    private <%= @repository_name %>Converter converter;
    @Autowired
    private <%= @repository_name %>Repository repository;
    <% @service_props.each do |service, props| %>
    <% if props["get"] && !props["get"][:request][:path].nil? %>
    @Override
    public <%= props["get"][:response][:object] %>Model getEntity(Long <%= props["get"][:request][:path] %>)
    {
         return new <%= props["get"][:response][:object] %>Model(converter.entityToModel(repository.findById(<%= props["get"][:request][:path] %>).get()));
    }
    <% end %>    <% if props["get"] && props["get"][:request][:path].nil? %>
    @Override
    public <%= props["get"][:response][:object] %>Model getEntities()    {
        return new <%= props["get"][:response][:object] %>Model(converter.entitiesToModels(repository.findAll()));
    }
    <% end %>    <% if props["post"] %>
    @Override
    public <%=props["post"][:response][:object] %>Model postEntity(<%= props["post"][:request][:body] %>Model model)    {
        repository.save(converter.modelToEntity(model.getData()));
        return new <%= props["post"][:response][:object] %>Model()  ; 
    }
    <% end %> <% if props["put"] %>
    @Override
    public <%= props["put"][:response][:object] %>Model putEntity(<%= props["put"][:request][:body] %>Model model)    {
        repository.update(converter.modelToEntity(model.getData()));
        return new <%= props["put"][:response][:object] %>Model()  ; 
    }
    <% end %><% if props["delete"] %>
    @Override
    public void deleteEntity(Long <%= props["delete"][:request][:path] %>)    {
          repository.deleteById(<%= props["delete"][:request][:path] %>);
    }    <% end %><% end %>
    
}
